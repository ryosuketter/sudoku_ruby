# 制約条件のチェック(1) P10
def no_violation?(grid, i, j)
  p (
    ((0..8).collect{|k| grid[3*(i/3)+(k/3)][3*(j/3)+(k%3)]})
  )
end

grid = [
  [1, 4, 5, 3, 2, 7, 6, 9, 8],
  [8, 3, 9, 6, 5, 4, 1, 2, 7],
  [6, 7, 2, 9, 1, 8, 5, 4, 3],
  [4, 9, 6, 1, 8, 5, 3, 7, 2],
  [2, 1, 8, 4, 7, 3, 9, 5, 6],
  [7, 5, 3, 2, 9, 6, 4, 8, 1],
  [3, 6, 7, 5, 4, 2, 8, 1, 9],
  [9, 8, 4, 7, 6, 1, 2, 3, 5],
  [5, 2, 1, 8, 3, 9, 7, 6, 4]
]
i = 8 # i 行
j = 8 # j 列

no_violation?(grid, i, j)
# -> [8, 1, 9, 2, 3, 5, 7, 6, 4]

# 一番最後の配列 : 行
# grid[i] -> [5, 2, 1, 8, 3, 9, 7, 6, 4]

# 一番最後の配列 : 列
# (0..8).collect{|k| grid[k][j]} -> [8, 7, 3, 2, 6, 1, 9, 5, 4]

# 右下のブロック
# (0..8).collect{|k| grid[3*(i/3)+(k/3)][3*(j/3)+(k%3)]}
# -> [8, 1, 9,
#     2, 3, 5,
#     7, 6, 4]
# https://docs.google.com/spreadsheets/d/1BpjhG62_rK07rOyg79jjIgudDfsDdUWj9RhSy_UGWeM/edit#gid=0

